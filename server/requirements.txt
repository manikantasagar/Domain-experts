# # Django Server Dependencies
# # Core Django Framework
# Django>=4.2.0

# # Database
# psycopg2-binary>=2.9.0

# # Environment Variables
# python-dotenv>=1.0.0

# # REST Framework
# djangorestframework>=3.14.0
# djangorestframework-simplejwt>=5.3.0

# # CORS Headers
# django-cors-headers>=4.3.0

# # WebSocket/Channels
# channels>=4.0.0
# channels-redis>=4.1.0
# daphne>=4.0.0

# # JWT Authentication
# PyJWT>=2.8.0

# # AI/ML Libraries
# google-generativeai>=0.3.0
# # openai>=1.0.0  # Uncomment if using OpenAI

# # Data Visualization
# matplotlib>=3.7.0

# # Additional Utilities
# Pillow>=10.0.0  # For image handling
# python-decouple>=3.8  # Alternative to python-dotenv

# # Development Tools (Optional)
# django-debug-toolbar>=4.2.0 

aiohappyeyeballs==2.6.1
aiohttp==3.12.14
aiosignal==1.4.0
annotated-types==0.7.0
anyio==4.9.0
asgiref==3.9.1
attrs==25.3.0
autobahn==24.4.2
Automat==25.4.16
cachetools==5.5.2
certifi==2025.7.14
cffi==1.17.1
channels==4.2.2
channels_redis==4.3.0
charset-normalizer==3.4.2
colorama==0.4.6
constantly==23.10.4
contourpy==1.3.2
cryptography==45.0.5
cycler==0.12.1
daphne==4.2.1
distro==1.9.0
dj-database-url==3.0.1
Django==5.2.4
django-cors-headers==4.7.0
djangorestframework==3.16.0
djangorestframework_simplejwt==5.5.1
dotenv==0.9.9
fonttools==4.59.0
frozenlist==1.7.0
google-ai-generativelanguage==0.6.15
google-api-core==2.25.1
google-api-python-client==2.177.0
google-auth==2.40.3
google-auth-httplib2==0.2.0
google-generativeai==0.8.5
googleapis-common-protos==1.70.0
grpcio==1.74.0
grpcio-status==1.71.2
h11==0.16.0
httpcore==1.0.9
httplib2==0.22.0
httpx==0.28.1
hyperlink==21.0.0
idna==3.10
incremental==24.7.2
jiter==0.10.0
kiwisolver==1.4.8
matplotlib==3.10.3
msgpack==1.1.1
multidict==6.6.3
numpy==2.3.1
openai==1.97.1
packaging==25.0
pillow==11.3.0
propcache==0.3.2
proto-plus==1.26.1
protobuf==5.29.5
psycopg2==2.9.10
psycopg2-binary==2.9.10
pyasn1==0.6.1
pyasn1_modules==0.4.2
pycparser==2.22
pydantic==2.11.7
pydantic_core==2.33.2
PyJWT==2.10.1
pyOpenSSL==25.1.0
pyparsing==3.2.3
python-dateutil==2.9.0.post0
python-decouple==3.8
python-dotenv==1.1.1
redis==6.2.0
requests==2.32.4
rsa==4.9.1
service-identity==24.2.0
setuptools==80.9.0
six==1.17.0
sniffio==1.3.1
sqlparse==0.5.3
tqdm==4.67.1
Twisted==25.5.0
txaio==25.6.1
typing-inspection==0.4.1
typing_extensions==4.14.1
tzdata==2025.2
uritemplate==4.2.0
urllib3==2.5.0
whitenoise==6.9.0
yarl==1.20.1
zope.interface==7.2











# from pathlib import Path
# import os
# from dotenv import load_dotenv
# # from decouple import Config, RepositoryEnv

# # config = Config(repository=RepositoryEnv('x.env'))

# # Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent


# # Quick-start development settings - unsuitable for production
# # See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# # SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'django-insecure-c9z==8xa&a=wip4j-1$qu+%=bv$%0oi%1vr%*esnmuxnsneu4w'

# # SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True

# ALLOWED_HOSTS = []


# # Application definition

# INSTALLED_APPS = [
#     'corsheaders',
#     'channels',
#     'chatting',
#      'rest_framework',
#     'home.apps.HomeConfig',
#     'ai.apps.AiConfig',
#     'django.contrib.admin',
#     'django.contrib.auth',
#     'django.contrib.contenttypes',
#     'django.contrib.sessions',
#     'django.contrib.messages',
#     'django.contrib.staticfiles',
# ]
# MIDDLEWARE = [
#     'corsheaders.middleware.CorsMiddleware',
#     'django.middleware.security.SecurityMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     'django.middleware.common.CommonMiddleware',
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.auth.middleware.AuthenticationMiddleware',
#     'django.contrib.messages.middleware.MessageMiddleware',
#     'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
# ]
# CORS_ALLOWED_ORIGINS = [
#     'http://localhost:3000',
#     'http://localhost:8000',
# ]
# CORS_ALLOW_ALL_ORIGINS = True  # no quotes
# ROOT_URLCONF = 'backend.urls'

# TEMPLATES = [
#     {
#         'BACKEND': 'django.template.backends.django.DjangoTemplates',
#         'DIRS': [],
#         'APP_DIRS': True,
#         'OPTIONS': {
#             'context_processors': [
#                 'django.template.context_processors.request',
#                 'django.contrib.auth.context_processors.auth',
#                 'django.contrib.messages.context_processors.messages',
#             ],
#         },
#     },
# ]

# WSGI_APPLICATION = 'backend.wsgi.application'


# # Database
# # https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'coaches',  # Replace with your database name
#         'USER': 'postgres',
#         'PASSWORD': 'Manisai@2003',
#         'HOST': 'localhost',
#         'PORT': '5432',
#     }
# }
# MEDIA_URL = '/coaches/'
# MEDIA_ROOT = os.path.join(BASE_DIR, 'coaches')


# # Password validation
# # https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# # Internationalization
# # https://docs.djangoproject.com/en/5.2/topics/i18n/

# LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'

# USE_I18N = True

# USE_TZ = True


# # Static files (CSS, JavaScript, Images)
# # https://docs.djangoproject.com/en/5.2/howto/static-files/

# STATIC_URL = 'static/'

# # Default primary key field type
# # https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

# DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# # chatting
# ASGI_APPLICATION = 'backend.asgi.application'
# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'channels.layers.InMemoryChannelLayer',
#     },
# }

# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#         'rest_framework_simplejwt.authentication.JWTAuthentication',
#     ),
# }

# load_dotenv()
# GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
# # OPENAI_API_KEY = os.getenv("OPENAI_API_KEY")
